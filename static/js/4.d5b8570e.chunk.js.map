{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","Auth","ContactData","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignUp","componentDidMount","_this","props","buildingBurger","authRedirectPath","onSetAuthRedirectPath","checkValidity","rules","isValid","trim","length","maxLength","inputChangedHandler","event","controlName","updatedControls","Object","D_SUMMER_CODING_Projects_BurgerApp_burger_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_SUMMER_CODING_Projects_BurgerApp_burger_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","setState","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","_this2","this","formElementsArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_8__","shouldValidate","invalid","change","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__","errorMessage","error","style","color","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","to","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_9__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","InputElement","validationError","Invalid","ValidationError","assign","onChange","join","options","el","displayValue","Input","label","Label"],"mappings":"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","file":"static/js/4.d5b8570e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1L0uX\",\"ContactData\":\"Auth_ContactData__2BUX-\"};","import React,{Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect}from 'react-router-dom';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'email address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n            password:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength: 6,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n        },\r\n        isSignUp:true,\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        if(!this.props.buildingBurger && this.authRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity = (value,rules)=>{\r\n        let isValid = true;\r\n\r\n        if(rules.required){\r\n            isValid = (value.trim() !== '')&& isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = (value.length >= rules.minLength)&& isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = (value.length <= rules.maxLength)&& isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]:{\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:this.checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true,\r\n            }\r\n        };\r\n        this.setState({controls:updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return{\r\n                isSignUp:!prevState.isSignUp,\r\n            };\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key],\r\n            })\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement =>(\r\n            <Input\r\n            key={formElement.id}\r\n            touched = {formElement.config.touched}\r\n            shouldValidate={formElement.config.validation}\r\n            invalid={!formElement.config.valid}\r\n            change={(event)=>this.inputChangedHandler(event,formElement.id)} \r\n            elementType={formElement.config.elementType} elementConfig={formElement.config.elementConfig} \r\n            value={formElement.config.value}\r\n            />\r\n        ))\r\n        \r\n        if(this.props.loading){\r\n            form=<Spinner/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        \r\n        if(this.props.error){\r\n            errorMessage=\r\n            <p style={{color:'red'}}>\r\n             {this.props.error}   \r\n            </p>\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect=<Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n        return(\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <h3>{this.state.isSignUp?'SIGN UP':'LOG IN'}</h3>\r\n                <form onSubmit={this.submitHandler}>\r\n                {form}\r\n                <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                clicked={this.switchAuthModeHandler}\r\n                btnType=\"Danger\"\r\n                >\r\n                {this.state.isSignUp?'Already have an account? Log in here!':'Dont have an account yet? sign up here!'}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading:state.auth.loading,\r\n        error:state.auth.error,\r\n        isAuthenticated:state.auth.token !== null,\r\n        buildingBurger:state.burgerBuilder.building,\r\n        authRedirectPath:state.auth.authRedirectPath,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onAuth :\r\n        (email,password,isSignUp) => dispatch(actions.auth(email,password,isSignUp)),\r\n        onSetAuthRedirectPath:\r\n        () => dispatch(actions.setAuthRedirectPath('/')),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    let validationError = null;\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.elementConfig.placeholder}!</p>\r\n    }\r\n    \r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement=<input onChange={props.change} className={inputClasses.join(' ')}{...props.elementConfig} value={props.value}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement=<textarea onChange={props.change} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement=(\r\n            <select \r\n            onChange={props.change}\r\n            className={inputClasses.join(' ')} \r\n            value={props.value}>\r\n            {props.elementConfig.options.map(el =>{\r\n            return(\r\n            <option key={el.value} value={el.value}>{el.displayValue}</option>\r\n            )})}\r\n            </select>);\r\n            break;\r\n        default:\r\n            inputElement=<input onChange={props.change} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}/>;\r\n    }\r\n    \r\n    return(\r\n    <div className={classes.Input}>\r\n        <label>{props.label}</label>\r\n        {inputElement}\r\n        {validationError}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3arYa\",\"Label\":\"Input_Label__26E0I\",\"InputElement\":\"Input_InputElement__2Oa03\",\"Invalid\":\"Input_Invalid__m4amh\",\"ValidationError\":\"Input_ValidationError__2jIhg\"};"],"sourceRoot":""}