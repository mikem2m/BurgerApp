{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","components_Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,wIC+BHA,EA7BD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAKF,EACLG,OAAOL,EAAMC,YAAYC,KAIjC,IAAMI,EAAmBL,EAAYM,IAAI,SAACC,GAAD,OACrCC,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CACTC,cAAc,aACdC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKV,EAAGJ,MAAOI,EAAGJ,KAPlB,KAO0BI,EAAGH,OAP7B,OAUJ,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQrB,OACpBU,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,cAASX,EAAMqB,MAAMC,QAAQ,GAA7B,iDCnBhBC,8LAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAMF,KAAKxB,MAAM2B,yCAIrD,IAAIC,EAASnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAUb,OATIL,KAAKxB,MAAM8B,UACXF,EAASJ,KAAKxB,MAAM4B,OAAOrB,IAAI,SAACwB,GAC5B,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,CACH/B,YAAa8B,EAAM9B,YACnBoB,OAAQU,EAAMV,MACdH,IAAKa,EAAME,QAKnBxB,EAAAC,EAAAC,cAAA,WACKiB,UAnBIM,aAwCNC,sBAfS,SAAAC,GACpB,MAAM,CACFR,OAAOQ,EAAML,MAAMH,OACnBE,QAAQM,EAAML,MAAMD,QACpBJ,MAAMU,EAAMC,KAAKX,MACjBC,OAAOS,EAAMC,KAAKV,SAIC,SAAAW,GACvB,MAAM,CACFb,cAAc,SAACC,EAAMC,GAAP,OAAgBW,EAASC,IAAmBb,EAAMC,OAIzDQ,CAA4CK,YAAiBjB,EAAOkB","file":"static/js/5.6a591e30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2jIl-\"};","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst Order = (props) => {\r\n    \r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map((ig)=>(\r\n        <span style={{\r\n            textTransform:'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px',\r\n        }}\r\n        key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    ))\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>{props.price.toFixed(2)} $</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order;","import React,{Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../HOC/WithErrorHandler/WithErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token,this.props.userId);\r\n    }\r\n    \r\n    render(){\r\n        let orders = <Spinner/>\r\n        if(!this.props.loading){\r\n            orders = this.props.orders.map((order)=>{\r\n                return(<Order \r\n                    ingredients={order.ingredients}\r\n                    price={+order.price}\r\n                    key={order.id}\r\n                    />)\r\n            })  }\r\n        \r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onFetchOrders:(token,userId)=>dispatch(actions.fetchOrder(token,userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}