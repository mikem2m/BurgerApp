{"version":3,"sources":["containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css"],"names":["module","exports","ContactData","checkoutSummary","props","react_default","a","createElement","className","classes","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipcode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","tp","orderData","userId","onOrderBurger","token","checkValidity","rules","isValid","trim","length","inputChangedHandler","inputIdentifier","updatedOrderForm","Object","objectSpread","updatedFormElement","target","inputIdentifiers","setState","_this2","this","formElementsArray","key","push","id","config","form","onSubmit","map","formElement","Input","shouldValidate","invalid","change","disable","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","InputElement","validationError","Invalid","ValidationError","assign","onChange","join","el","label","Label"],"mappings":"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","file":"static/js/3.623fbb7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3DnR_\"};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType='Danger' clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType='Success' clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React,{Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../../HOC/WithErrorHandler/WithErrorHandler'\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component{\r\n    state = {\r\n        orderForm:{\r\n            name:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n            street:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n            zipcode:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:5,\r\n                    maxLength:5,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your email'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false},\r\n            deliveryMethod:{\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                    {value:'fastest',displayValue:'Fastest'},\r\n                    {value:'regular',displayValue:'Regular'},\r\n                    {value:'cheapest',displayValue:'Cheapest'},\r\n                ]},\r\n                value:'fastest',\r\n                validation:{},\r\n                valid:true},\r\n        },\r\n        formIsValid:false,\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier]=this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const order ={\r\n            ingredients:this.props.ings,\r\n            price:this.props.tp,\r\n            orderData:formData,\r\n            userId:this.props.userId,\r\n        } \r\n        \r\n        this.props.onOrderBurger(order,this.props.token);\r\n    }\r\n\r\n    checkValidity = (value,rules)=>{\r\n        let isValid = true;\r\n\r\n        if(rules.required){\r\n            isValid = (value.trim() !== '')&& isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = (value.length >= rules.minLength)&& isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = (value.length <= rules.maxLength)&& isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifiers in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifiers].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key],\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => {\r\n                    return(<Input\r\n                        touched = {formElement.config.touched}\r\n                        shouldValidate={formElement.config.validation}\r\n                        invalid={!formElement.config.valid}\r\n                        change={(event)=>this.inputChangedHandler(event,formElement.id)} \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}/> )\r\n                })}\r\n                <Button btnType='Success' disable={!this.state.formIsValid}>ORDER!</Button>\r\n            </form>\r\n        );\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings:state.burgerBuilder.ingredients,\r\n        tp:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onOrderBurger: \r\n        (orderData,token) => dispatch(actions.purchaseBurger(orderData,token)),\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React,{Component} from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n// import * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component{\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to='/'/>\r\n        if(this.props.ings){\r\n        const purchasedRedirect = this.props.purchased?<Redirect to='/'/>:null\r\n            summary = (\r\n            <div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary ingredients={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n            />\r\n            <Route path={this.props.match.path + '/contact-data'} \r\n            component={ContactData}\r\n            />\r\n            </div>)}\r\n    \r\n        return summary\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings:state.burgerBuilder.ingredients,\r\n        purchased:state.order.purchased,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    let validationError = null;\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.elementConfig.placeholder}!</p>\r\n    }\r\n    \r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement=<input onChange={props.change} className={inputClasses.join(' ')}{...props.elementConfig} value={props.value}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement=<textarea onChange={props.change} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement=(\r\n            <select \r\n            onChange={props.change}\r\n            className={inputClasses.join(' ')} \r\n            value={props.value}>\r\n            {props.elementConfig.options.map(el =>{\r\n            return(\r\n            <option key={el.value} value={el.value}>{el.displayValue}</option>\r\n            )})}\r\n            </select>);\r\n            break;\r\n        default:\r\n            inputElement=<input onChange={props.change} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}/>;\r\n    }\r\n    \r\n    return(\r\n    <div className={classes.Input}>\r\n        <label>{props.label}</label>\r\n        {inputElement}\r\n        {validationError}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3arYa\",\"Label\":\"Input_Label__26E0I\",\"InputElement\":\"Input_InputElement__2Oa03\",\"Invalid\":\"Input_Invalid__m4amh\",\"ValidationError\":\"Input_ValidationError__2jIhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__37s4W\"};"],"sourceRoot":""}